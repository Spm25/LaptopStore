@model LaptopStore.Models.User
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Chỉnh sửa Người dùng";
    var currentUserName = User.Identity.Name; // Lấy UserName của người dùng đang đăng nhập
    bool isCurrentUserBeingEdited = Model.UserName != null && Model.UserName.Equals(currentUserName, StringComparison.OrdinalIgnoreCase);
    bool isProtectedAdmin = Model.UserName != null && Model.UserName.Equals("admin", StringComparison.OrdinalIgnoreCase);
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">@ViewData["Title"]</h1>
            </div><div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Trang chủ</a></li>
                    <li class="breadcrumb-item"><a asp-controller="Users" asp-action="Index">Danh sách Người dùng</a></li>
                    <li class="breadcrumb-item active">@ViewData["Title"]</li>
                </ol>
            </div>
        </div>
    </div>
</div>
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-8 mx-auto">
                <form asp-action="Edit" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="UserID" />

                    <div class="card card-primary">
                        <div class="card-header">
                            <h3 class="card-title">Thông tin Người dùng</h3>
                        </div>
                        <div class="card-body">
                            <div class="form-group">
                                <label asp-for="UserName" class="control-label"></label>
                                <input asp-for="UserName" class="form-control" readonly="@(Model.UserName != null && Model.UserName.Equals("admin", StringComparison.OrdinalIgnoreCase) ? "readonly" : null)" />
                                <span asp-validation-for="UserName" class="text-danger"></span>
                                @if (Model.UserName != null && Model.UserName.Equals("admin", StringComparison.OrdinalIgnoreCase))
                                {
                                    <small class="form-text text-muted">Không thể thay đổi tên đăng nhập của quản trị viên gốc.</small>
                                }
                            </div>

                            <div class="form-group">
                                <label asp-for="Password" class="control-label">Mật khẩu mới</label>
                                <input asp-for="Password" class="form-control" type="password" placeholder="Để trống nếu không muốn thay đổi mật khẩu" />
                                <span asp-validation-for="Password" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="Role" class="control-label"></label>
                                @{
                                    // Chỉ vô hiệu hóa nếu người dùng đang chỉnh sửa là "admin" VÀ người dùng đang đăng nhập KHÔNG PHẢI là "admin" đó
                                    // Hoặc nếu người dùng "admin" đang tự chỉnh sửa chính mình.
                                    var disableRoleEdit = isProtectedAdmin;
                                }
                                <select asp-for="Role" class="form-control" disabled="@disableRoleEdit">
                                    <option value="1">Quản trị viên</option>
                                    <option value="2">Nhân viên</option>
                                </select>
                                <span asp-validation-for="Role" class="text-danger"></span>
                                @if (disableRoleEdit)
                                {
                                    // Nếu role select bị disabled, giá trị của nó sẽ không được post lên server.
                                    // Để đảm bảo vai trò của admin không bị thay đổi, ta cần gửi lại giá trị cũ.
                                    // Điều này sẽ được xử lý tốt hơn ở phía server.
                                    // Dòng hidden input này giúp giữ giá trị khi post nếu select bị disable.
                                    <input type="hidden" asp-for="Role" />
                                    <small class="form-text text-muted">Không thể thay đổi vai trò của tài khoản 'admin'.</small>
                                }
                            </div>
                        </div>
                        <div class="card-footer">
                            <button type="submit" value="Save" class="btn btn-primary">Lưu thay đổi</button>
                            <a asp-action="Index" class="btn btn-secondary ml-2">Quay lại danh sách</a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}